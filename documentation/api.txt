
## Endpoint documentation

Tuk sa dokumentirani vsichkite endpointove, tehniq request method, url structure, request body i response
Na vseki endpoint s -Auth header trqbva da se prati jwt bearer access type token

### /user

- /user/login/ 
	- POST
	- logva user
```json
{
"username": "",
"password": ""
}
```
- vrushta json s access i refresh jwt tokeni koito pazish v cookie
```json
{
"access": "",
"refresh": ""
}
```

- /user/login/refresh
	- POST
	- refreshva jwt token
```json
{
"refresh": ""
	}
```
- vrushta nov access-refresh pair
```json
{
"access": "",
"refresh": ""
}
```

- /user/logout/ 
	- POST
	- logoutva user ako e loginnat kato mu blacklistva resfresh tokena (efektivno usera vse oshte ima access token no za kratko vreme)
```json
{
"refresh": ""
}
```

- /user/create
	- POST 
	- Pravi user
```json
{
"email": "",
"username": "",
"password": ""
}
```

- /user/:id
	- GET
	- Auth header
	- Vrushta public user info po id
```json
{
  "full_name": "",
  "username": "",
  "bio": "",
  "profile_pic": ,
  "followers": [],
  "following": [],
  "followers_count": ,
  "follwowing_count": ,
  "posts": [],
  "post_count": ,
}
```

- /user/me/
	- GET
	- Auth header
	- Vrushta cqloto info na lognat user samo na nego
```json
{
  "full_name": "",
  "username": "",
  "email": "",
  "bio": "",
  "profile_pic": ,
  "birthday": ,
  "followers": [],
  "following": [],
  "followers_count": ,
  "follwowing_count": ,
  "posts": [],
  "post_count": ,
  "likes": [],
  "likes count": ,
  "saved_posts":Â []
}
```

- /user/update/:id 
	- PATCH
	- Auth header
	- updateva user
	- requesta trqbva da promeni pone edno ot dadenite poleta
```json
{
  "full_name": "",
  "username": "",
  "bio": "",
  "birthday":
  "profile_pic": ,
}
```

- /user/delete/:id - 
	- DELETE
	- Auth header
	- deleteva user po id, potencialno moga da go promenq da iziskva username i parola za da trie nz oshte

- /user/follow/\<id na usera koito iskame da bude follownat\> 
	- GET
	- Auth header
	- pravi user da followva drug user ako ne go followva veche i da go unfollowne ako veche go followva

- /user/feed/
	- GET
	- Auth header
	- vrushta feed s vsichki postove na useri koito user sledva i gi podrejda po ordered
	- 

### /post

- /post/:id
	- GET
	- Auth header
	- Vrushta post po id
```json
{
"author": {
	"pk": ,
	"username": "",
	"profile_pic": 
},
"image": ,
"posted_time": "",
"caption": "",
"content": "",
"likes": [],
"comments": [],
"likes_count": ,
}
```

- /post/create
	- POST
	- Auth header
	- pravi post s avtor usera koito sendva requesta
```json
{
"image": ,
"caption": "",
"content": ""
}
```

- /post/update/:id 
	- PATCH
	- Auth header
	- requesta trqbva da promeni pone edno ot dadenite poleta
```json
{
"image": ,
"caption": "",
"content": ""
}
```

- /post/delete/\<id na posta\>
	- DELETE
	- Auth header
	- trie post po id

- /post/like/\<id na posta\>
	- GET
	- Auth header
	- pravi user da likene post ako veche ne go e likenal i da go unlikene ako go e likenal


- /post/save/\<id na posta\>
	- GET
	- Auth header
	- pravi user da dpbavi post kum savenati postove
	- Absolutno sushtoto kato gornoto


### /comment

- /comment/create
	- POST
	- pravi comment kum specifichen post
```json
{
"author": ,
"post": ,
"content": ""
}
```

- /comment/:id
	- GET
	- vrushta comment po id
```json
{
"author": ,
"post": ,
"content": "",
"posted_time": ""
}
```

- /comment/delete/:id - TODO
- [ ] homechef comment delete [due:: 2023-12-10 ]
	- DELETE
	- trie post po id